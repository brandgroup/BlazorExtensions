@page "/"
@using Brandgroup.BlazorExtensions.Components
@using Brandgroup.BlazorExtensions.Components.Bootstrap

@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<Modal @ref="_modal" Size="ModalSize.Small"></Modal>

<Record MiniTitle="Mini Title" Title="Title" Icon="bi bi-person" Selectable="true">
</Record>

<FormModal @ref="_testModal" Size="ModalSize.Small" Id="TestModal" Title="User Bearbeiten" ShowCloseButton="true" ShowCancelButton="true">
    <button type="button" class="btn btn-primary">Test</button>
</FormModal>

<button class="btn btn-primary" type="button" @onclick="ShowModal">Show Modal</button>

<button class="btn btn-primary" type="button" @onclick="ShowToast">Show Toast</button>

<button class="btn btn-primary" type="button" @onclick="ShowAlertToast">Show AlertToast</button>

<Brandgroup.BlazorExtensions.Components.DirectoryFilePicker class="form-control"></Brandgroup.BlazorExtensions.Components.DirectoryFilePicker>

<ToastContainer>
    <Toast @ref="_toast" Autohide="true" Animation="false" Delay="4000">
        <Header>
            <strong class="me-auto">Bootstrap</strong>
            <small>X mins ago</small>
        </Header>
        <Body>
        Hello, world! This is a toast message.
        </Body>
    </Toast>
    
    <AlertToast @ref="_alertToast" BackgroundColor="BackgroundColor.Success" Message="Test" />
</ToastContainer>

@code
{
    private FormModal? _testModal;

    private Modal? _modal;

    private Toast? _toast;

    private AlertToast? _alertToast;

    private async void ShowModal() {
        await _testModal?.ShowAsync();
    }

    private async void ShowToast()
    {
        await _toast?.ShowAsync();
    }

    private async void ShowAlertToast()
    {
        await _alertToast?.ShowAsync();
    }
}
